Ex.No:11 STUDY OF IPV6 ADDRESSING & SUBNETTING
Date:
AIM:
To Study the IPV6 Addressing and Subnetting
What is IPv6:
As the number of internet devices—also known as the Internet of Things (IoT)—increases around the
world, more IP addresses are needed for these devices to communicate data. Consider smartphones,
smartwatches, refrigerators, washing machines, smart TVs, and other electronic devices that require an IP
address. All of these devices are now linked to the internet and have a unique IP address assigned to them. We'll
focus on IPv6, its characteristics, and why it'll be the Internet Protocol standard in this quick overview.
Before we go into the technicalities, there are a few things to know about IPv6:
1. IPv6 addresses are 128-bit (2128) and allow for 3.4 x 1038 unique IP addresses.
2. IPv6 is written in hexadecimal notation, with the colons separating eight groups of 16 bits, for a total
of 8 x 16 = 128, or bits. The following is an example of an IPv6 address:
 Syntax of IPv6 Addresses:
IPv4 addresses are represented in dotted-decimal format. The 32-bit address is divided along 8-bit
boundaries. Each set of 8 bits is converted to its decimal equivalent and separated by periods. In contrast, IPv6
addresses are 128 bits divided along 16-bit boundaries. Each 16-bit block is converted to a 4-digit hexadecimal
number and separated by colons. The resulting representation is called colon-hexadecimal.
 The Addressing Space:
The amount of memory dedicated to all potential addresses for a computational object, such as a device,
a file, a server, or a networked computer, is known as address space. A range of physical or virtual addresses
accessible to a processor or reserved for a process is referred to as address space. Each address defines an
entity's location as a unique identifier of single entities (unit of memory that can be addressed separately). Each
computer device and process is given address space on the computer, which is a piece of the processor's address
space. The address space of a processor is always constrained by the width of its address bus and registers. Flat
address space, in which addresses are expressed as continuously growing integers starting at zero, and
segmented address space, in which addresses are written as discrete segments enhanced by offsets, are the two
types of address space (values added to produce secondary addresses). Thunking is a procedure that allows
address space to be changed from one format to another in some systems.
In terms of IP address space, there has been concern that IPv4 (Internet Protocol Version 4) had not
anticipated the enormous growth of the Internet, and that its 32-bit address space would not be adequate. For
that reason, IPv6 has been developed with 128-bit address space.
Allocation of the IPv6 addressing space:
 Types of IPv6 Addresses:
Generally, IPv6 addresses is classified into 3. They are:
1. Unicast: This type is the address of a single interface. A packet forwarded to a unicast address is
delivered only to the interface identified by that address.
2. Anycast: This type is the address of a set of interfaces typically belonging to different nodes. A packet
forwarded to an anycast address is delivered to only one interface of the set (the nearest to the source
node, according to the routing metric).
3. Multicast: This type is the address of a set of interfaces that typically belong to different nodes. A
packet forwarded to a multicast address is delivered to all interfaces belonging to the set.
1. Unicast Addresses:
A unicast address identifies a single interface. When a network device sends a packet to a unicast address,
the packet goes only to the specific interface identified by that address. Unicast addresses support a global
address scope and two types of local address scopes.
A unicast address consists of n bits for the prefix, and 128 – n bits for the interface ID.
 Global unicast address—A unique IPv6 address assigned to a host interface. These addresses have a
global scope and essentially the same purposes as IPv4 public addresses. Global unicast addresses are
routable on the Internet.
 Link-local IPv6 address—An IPv6 address that allows communication between neighboring hosts that
reside on the same link. Link-local addresses have a local scope, and cannot be used outside the link.
They always have the prefix FE80::/10.
 Loopback IPv6 address—An IPv6 address used on a loopback interfaces. The IPv6 loopback address
is 0:0:0:0:0:0:0:1, which can be notated as ::1/128.
 Unspecified address—An IPv6 unspecified address is 0:0:0:0:0:0:0:0, which can be notated as ::/128.
1. Aggregatable Global Unicast Addresses:
Aggregate global unicast addresses are used for global communication. These addresses are similar in
function to IPv4 addresses under classless interdomain routing (CIDR). The following table shows their
format.
2. Geographic-Based Addresses:
Geography addresses are those determined by country of origin. This type of address is only available
in the IPv4 address category. The data address table includes a ‘scope’ and a ‘authority‘
3. Link Local Addresses:
A link-local address is a network address that is valid only for communications within the network
segment or the broadcast domain that the host is connected to. Link-local addresses are most often
assigned automatically with a process known as stateless address autoconfiguration or link-local
address autoconfiguration,[1] also known as automatic private IP addressing (APIPA) or auto-IP.
4. Site Local Addresses:
Site-local addresses are designed to be used for addressing inside of a site without the need for a global
prefix. A site-local address cannot be reached from another site. A site-local address is not automatically
assigned to a node. It must be assigned using automatic or manual configuration.
5. The Unspecified Address:
The address 0:0:0:0:0:0:0:0 is called the unspecified address. It will not be assigned to any node. It
indicates the absence of an address. One example of its use is in the Source Address field of any IPv6
packets sent by an initializing host before it has learned its own address.
6. The Loopback Address:
The IP address 127.0.0.1 is called a loopback address. Packets sent to this address never reach the
network but are looped through the network interface card only. This can be used for diagnostic
purposes to verify that the internal path through the TCP/IP protocols is working.
7. NSAP Addresses:
Short for Network Service Access Point, NSAP is an address consisting of up to 20 octets that identify
a computer or network connected to an ATM network. NSAP is defined in ISO/IEC 8348.
8. IPX Addresses:
Internetwork Packet Exchange (IPX) is the network layerprotocol in the IPX/SPXprotocol suite. IPX
is derived from Xerox Network Systems' IDP. It may act as a transport layer protocol as well.
2. Anycast Address:
An anycast address identifies a set of interfaces that typically belong to different nodes. Anycast addresses
are similar to multicast addresses, except that packets are sent only to one interface, not to all interfaces. The
routing protocol used in the network usually determines which interface is physically closest within the set of
anycast addresses and routes the packet along the shortest path to its destination.
There is no difference between anycast addresses and unicast addresses except for the subnet-router address.
For an anycast subnet-router address, the low-order bits, typically 64 or more, are zero. Anycast addresses are
taken from the unicast address space.
3. Multicast Addresses:
A multicast address identifies a set of interfaces that typically belong to different nodes. When a network
device sends a packet to a multicast address, the device broadcasts the packet to all interfaces identified by that
address. IPv6 does not support broadcast addresses, but instead uses multicast addresses in this role.
Multicast addresses support 16 different types of address scope, including node, link, site, organization, and
global scope. A 4-bit field in the prefix identifies the address scope.
The following types of multicast addresses can be used in an IPv6 subscriber access network:
 Solicited-node multicast address—Neighbor Solicitation (NS) messages are sent to this address.
 All-nodes multicast address—Router Advertisement (RA) messages are sent to this address.
 All-routers multicast address—Router Solicitation (RS) messages are sent to this address.
 Which addresses are generally used for a node?
1. Addresses of a Host:
2. Addresses of a Router:
Result :
Hence Study of IPV6 Addressing & Subnetting is completed sucessfully





Ex.No:12 IMPLEMENTATION OF NETWORK ADDRESS TRANSLATION
Date:
Aim:
To study and perform Network Address Translation (NAT) using cisco packet tracer.
Procedure:
1. Assign the following topology with respective IP addresses to pc, routers, servers and connection between
them.
2. Configure static NAT configuration
Since static NAT use manual translation, we have to map each inside local IP address (which needs a
translation) with inside global IP address. Following command is used to map the inside local IP address with
inside global IP address.
Router(config)#ip nat inside source static [inside local ip address] [inside global IP address]
And use the following commands to define inside and outside network connection for your local and global
IP addresses.
Router(config-if)#ip nat inside
Router(config-if)#ip nat outside
Static NAT configuration for Router0 connected with 3 pc’s:
Static NAT configuration for Router0 connected with server:
3.Configure the IP routing
IP routing is the process which allows router to route the packet between different networks.
IP routing on router0:
IP routing on router1:
4.Testing Static NAT Configuration
To test this setup click on any PC and Desktop and click Command Prompt.
• Run ipconfig command.
• Run ping 200.0.0.10 command.
• Run ping 192.168.1.10 command
First command verifies that we are testing from correct NAT device.
Second command checks whether we are able to access the remote device or not. A ping reply confirms that
we are able to connect with remote device on this IP address.
Third command checks whether we are able to access the remote device on its actual IP address or not. A ping
error confirms that we are not able to connect with remote device on this IP address.

Another way of testing is via browser:
We can also verify this translation on router with show ipnat translation command.
For router0:
For router1:
Result:
Henceforth, Network Address Translation (NAT) using cisco packet tracer implemented and verified.





Ex.No:13 IMPLEMENTATION OF VPN
Date:
AIM :
To configure VPN using routers in Cisco Packet Tracer.
PROCEDURE :
1 . Connect the devices as shown in the below figure.
2 . Initial IP configuration.
Device / Interface IP Address Connected with
PC0 / Fa0 192.168.1.2 /24 Router1 / Gig0/0
PC1 / Fa0 192.168.2.2 /24 Router2 / Gig0/0
Router1 / Se0/1/0 10.0.0.1 /8 Router 2 / Se0/1/0
Router2 / Se0/1/0 10.0.0.2 /8 Router 1 / Se0/1/0
Router2 / Se0/1/1 20.0.0.1 /8 Router3 / Se0/1/0
Router3 / Se0/1/0 20.0.0.2 /8 Router2 / Se0/1/1
3 .To assign IP address in Laptop click Laptop and click Desktop and IP configuration and
Select Static and set IP address as given in above table.
Following the same way, configure the IP address in PC1.
4. We have to assign ip address on each and every interface of router
CONFIGURATION ON ROUTER1:
Router>enable
Router#config t
Router(config)#int gig0/0
Router(config-if)#ip add 192.168.1.1 255.255.255.0
Router(config-if)#no shut
Router(config-if)#exit
Router(config)#int se0/1/0
Router(config-if)#ip address 10.0.0.1 255.0.0.0
Router(config-if)#no shut
CONFIGURATION ON ROUTER2:
Router>enable
Router#config t
Router(config)#int se0/1/0
Router(config-if)#ip add 10.0.0.2 255.0.0.0
Router(config-if)#no shut
Router(config-if)#exit
Router(config)#int se0/1/1
Router(config-if)#ip add 20.0.0.1 255.0.0.0
Router(config-if)#no shut
CONFIGURATION ON ROUTER3:
Router>enable
Router#config t
Router(config)#int se0/1/0
Router(config-if)#ip add 20.0.0.2 255.0.0.0
Router(config-if)#no shut
Router(config-if)#exit
Router(config)#int gig0/0
Router(config-if)#ip add 192.168.2.1 255.255.255.0
Router(config-if)#no shut
5. Now it's time to do routing. Here we have to configure default routing.
DEFAULT ROUTING CONFIGURATION ON ROUTER1:
Router>enable
Router#config t
Enter configuration commands, one per line. End with CNTL/Z.
Router(config)#ip route 0.0.0.0 0.0.0.0 10.0.0.2
Router(config)#
DEFAULT ROUTING CONFIGURATION ON ROUTER3:
Router>enable
Router#config t
Enter configuration commands, one per line. End with CNTL/Z.
Router(config)#ip route 0.0.0.0 0.0.0.0 20.0.0.1
Router(config)#
6. NOW CHECK THE CONNECTION BY PINGING EACH OTHER.
First we go to Router1 and ping with Router3:
Router#ping 20.0.0.2
Type escape sequence to abort.
Sending 5, 100-byte ICMP Echos to 20.0.0.2, timeout is 2 seconds:
!!!!!
Success rate is 100 percent (5/5), round-trip min/avg/max = 26/28/33 ms
Now we go to Router3 and test the network by pinging Router1 interface.
Router#ping 10.0.0.1
Type escape sequence to abort.
Sending 5, 100-byte ICMP Echos to 10.0.0.1, timeout is 2 seconds:
!!!!!
Success rate is 100 percent (5/5), round-trip min/avg/max = 25/28/32 ms
You can clearly see both routers pinging each other successfully.
7. NOW CREATE VPN TUNNEL between Router1 and Router3:
FIRST CREATE A VPN TUNNEL ON ROUTER1:
Router#config t
Router(config)#interface tunnel 200
Router(config-if)#ip address 172.18.1.1 255.255.0.0
Router(config-if)#tunnel source se0/1/0
Router(config-if)#tunnel destination 20.0.0.2
Router(config-if)#no shut
NOW CREATE A VPN TUNNEL ON ROUTER R3:
Router#config t
Router(config)#interface tunnel 400
Router(config-if)#ip address 172.18.1.2 255.255.0.0
Router(config-if)#tunnel source se0/1/0
Router(config-if)#tunnel destination 10.0.0.1
Router(config-if)#no shut

8. Now test communication between these two routers again by pinging each other:
Router1
Router#ping 172.18.1.2
Type escape sequence to abort.
Sending 5, 100-byte ICMP Echos to 172.18.1.2, timeout is 2 seconds:
!!!!!
Success rate is 100 percent (5/5), round-trip min/avg/max = 30/32/36 ms
Router#
Router2
Router#ping 172.18.1.1
Type escape sequence to abort.
Sending 5, 100-byte ICMP Echos to 172.18.1.1, timeout is 2 seconds:
!!!!!
Success rate is 100 percent (5/5), round-trip min/avg/max = 33/45/83 ms
9. Now do routing for created VPN Tunnel on Both Router1 and Router3:
Router(config)#ip route 192.168.2.0 255.255.255.0 172.18.1.2
Router(config)#ip route 192.168.1.0 255.255.255.0 172.18.1.1
10. TEST VPN TUNNEL CONFIGURATION:
Now we have to test whether tunnel is created or not for Router1
Router#show interfaces Tunnel 200
Tunnel200 is up, line protocol is up (connected)
Hardware is Tunnel
Internet address is 172.18.1.1/16
MTU 17916 bytes, BW 100 Kbit/sec, DLY 50000 usec,
reliability 255/255, txload 1/255, rxload 1/255
Encapsulation TUNNEL, loopback not set
Keepalive not set
Tunnel source 10.0.0.1 (FastEthernet0/1), destination 20.0.0.2
Tunnel protocol/transport GRE/IP
Key disabled, sequencing disabled
Checksumming of packets disabled
Tunnel TTL 255
Fast tunneling enabled
Tunnel transport MTU 1476 bytes
Tunnel transmit bandwidth 8000 (kbps)
Tunnel receive bandwidth 8000 (kbps)
Last input never, output never, output hang never
Last clearing of "show interface" counters never
Input queue: 0/75/0/0 (size/max/drops/flushes); Total output drops: 1
Queueing strategy: fifo
Output queue: 0/0 (size/max)
5 minute input rate 32 bits/sec, 0 packets/sec
5 minute output rate 32 bits/sec, 0 packets/sec
52 packets input, 3508 bytes, 0 no buffer
Received 0 broadcasts, 0 runts, 0 giants, 0 throttles
0 input errors, 0 CRC, 0 frame, 0 overrun, 0 ignored, 0 abort
0 input packets with dribble condition detected
52 packets output, 3424 bytes, 0 underruns
0 output errors, 0 collisions, 0 interface resets
0 unknown protocol drops
0 output buffer failures, 0 output buffers swapped out
Now going to Router3 and test VPN Tunnel Creation:
Router #show interface Tunnel 400
Tunnel400 is up, line protocol is up (connected)
Hardware is Tunnel
Internet address is 172.18.1.2/16
MTU 17916 bytes, BW 100 Kbit/sec, DLY 50000 usec,
reliability 255/255, txload 1/255, rxload 1/255
Encapsulation TUNNEL, loopback not set
Keepalive not set
Tunnel source 20.0.0.2 (FastEthernet0/0), destination 10.0.0.1
Tunnel protocol/transport GRE/IP
Key disabled, sequencing disabled
Checksumming of packets disabled
Tunnel TTL 255
Fast tunneling enabled
Tunnel transport MTU 1476 bytes
Tunnel transmit bandwidth 8000 (kbps)
Tunnel receive bandwidth 8000 (kbps)
Last input never, output never, output hang never
Last clearing of "show interface" counters never
Input queue: 0/75/0/0 (size/max/drops/flushes); Total output drops: 1
Queueing strategy: fifo
Output queue: 0/0 (size/max)
5 minute input rate 32 bits/sec, 0 packets/sec
5 minute output rate 32 bits/sec, 0 packets/sec
52 packets input, 3424 bytes, 0 no buffer
Received 0 broadcasts, 0 runts, 0 giants, 0 throttles
0 input errors, 0 CRC, 0 frame, 0 overrun, 0 ignored, 0 abort
0 input packets with dribble condition detected
53 packets output, 3536 bytes, 0 underruns
0 output errors, 0 collisions, 0 interface resets
0 unknown protocol drops
11. Trace the VPN tunnel path.
RESULT:
Hence successfully, configured VPN using routers in Cisco Packet Tracer.




Ex.No:14 COMMUNICATION USING HDLC
Date:
AIM:
To configure HDLC Protocol using routers in Cisco Packet Tracer.
PROCEDURE:
1. Connect the devices as shown in the below figure.
2 . Initial IP configuration.
Device / Interface IP Address Connected with
PC0 / Fa0 10.0.0.2 /8 Router0 / Fa0/0
PC1 / Fa0 20.0.0.2 /8 Router1 / Fa0/0
Router0 / Se0/3/0 192.168.1.2 /30 Router1 / Se0/3/0
Router1 / Se0/3/0 192.168.1.3 /30 Router0 / Se0/3/0
3 . Use the connected laptops to find the DCE and DTE routers
4. Configure the routers with the following parameters
Router0 being the DCE, clock rate has to be configured on Router0 serial 0/3/0 interface.
5. Then, configure HDLC encapsulation and IP address on Router0 serial 0/3/0 interface. The encapsulation
hdlc configures HDLC protocol on the serial interface. Router0 being the DCE side of the serial link, the
192.168.1.3 /30 IP address is configured on Router0 serial 0/3/0 interface. Don't forget to enable the interface
with a no shutdown command.
6. The show interfaces serial 0/3/0 confirms that HDLC encapsulation is enabled on the interface
: Encapsulation HDLC, loopback not set, keepalive set (10 sec)
7. Finally, configure HDLC encapsulation and IP address on Router1 serial 0/3/0 interface. The link comes up
as both routers are correctly configured.
8. NOW CHECK THE CONNECTION BY PINGING EACH OTHER.
First we go to Router0 and ping with Router1:
Router#ping 192.168.1.6
Type escape sequence to abort.
Sending 5, 100-byte ICMP Echos to 198.168.1.6, timeout is 2 seconds:
!!!!!
Success rate is 100 percent (5/5), round-trip min/avg/max = 26/28/33 ms
Now we go to Router1 and test the network by pinging the Router0 interface.
Router#ping 192.168.1.2
Type escape sequence to abort.
Sending 5, 100-byte ICMP Echos to 192.168.1.2, timeout is 2 seconds:
!!!!!
Success rate is 100 percent (5/5), round-trip min/avg/max = 25/28/32 ms
RESULT :
Hence successfully, configured HDLC Protocol using routers in Cisco Packet Tracer.






Ex.No:15 COMMUNICATION USING HDLC
Date:
AIM:
To configure PPP using routers in Cisco Packet Tracer.
PROCEDURE:
1 . Connect the devices as shown in the below figure.
2 . Initial IP configuration.
Device / Interface IP Address Connected with
PC0 / Fa0 10.0.0.2 /8 Router0 / Fa0/0
PC1 / Fa0 20.0.0.2 /8 Router1 / Fa0/0
Router0 / Se0/3/0 192.168.1.2 /30 Router1 / Se0/3/0
Router1 / Se0/3/0 192.168.1.3 /30 Router0 / Se0/3/0
3 . Use the connected laptops to find the DCE and DTE routers

4. Configure the routers with the following parameters
Router0 being the DCE, clock rate has to be configured on Router0 serial 0/3/0 interface.
5. Then, configure PPP encapsulation and IP address on Router0 serial 0/3/0 interface. The encapsulation
ppp configures PPP protocol on the serial interface. Router0 being the DCE side of the serial link, the
192.168.1.3 /30 IP address is configured on Router0 serial 0/3/0 interface. Don't forget to enable the interface
with a no shutdown command.
6. The show interfaces serial 0/3/0 confirms that PPP encapsulation is enabled on the interface : Encapsulation
PPP, loopback not set, keepalive set (10 sec)
7. Finally, configure PPP encapsulation and IP address on Router1 serial 0/3/0 interface. The link comes up as
both routers are correctly configured.
8. NOW CHECK THE CONNECTION BY PINGING EACH OTHER.First we go to Router0 and ping with
Router1:
Now we go to Router1 and test the network by pinging the Router0 interface.
RESULT:
Hence successfully, configured PPP using routers in Cisco Packet Tracer.